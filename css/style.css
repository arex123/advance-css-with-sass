@charset "UTF-8";
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /*html by default font size 16px*/
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveTextToLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveTextToRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes buttonMovedownToUP {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* backface-visibility: hidden; */
  margin-bottom: 4rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveTextToLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-delay: 3s; this will start animation after 3 seconds */
    /* animation-iteration-count: 2; number of times animation happens */ }
  .heading-primary--sub {
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveTextToRight 1s; }

body {
  font-family: "Lato", sans-serif;
  font-size: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-secondary {
  text-transform: uppercase;
  font-size: 3.5rem;
  font-weight: 700;
  -webkit-background-clip: text;
  color: transparent;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  letter-spacing: .2rem;
  transition: all .3s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.u-margin-bottom-8 {
  margin-bottom: 8rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* above line will create color changing effect from one color to another (#55c57a  -> #28b485) from top left "to right bottom" , and in order to show img we have decreased the color opacity */
  background-size: cover;
  background-position: top;
  /* clip-path:polygon(x y, x y, x y, x y);  it behave as clockwise direction  */
  clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0 100%);
  /* how to make traingle */
  /* clip-path: polygon(50% 0,50% 0, 100% 100%, 0 100%); */
  /* create a right arrow 

    just go to clipy css website ðŸ˜’
     
    ____|\
   |      \
   |____  /
        |/

    */
  /* clip-path: polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%); */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* it will be shifted to half of the width of elements (iteselfs) height*/
    text-align: center; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    /* transform: scale(1.2); */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 0.5rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animate {
  animation: buttonMovedownToUP .5s ease-out .60s;
  /*ease out means fast at begining and slow at end, .75s means when animation should start*/
  animation-fill-mode: backwards;
  /* so as we have added delay in animation so in start our button will still be visible in original position , to avoid that use this property */ }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2*6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem)/4); }
  .row .col-2-of-4 {
    width: calc((2*((100% - 3*6rem)/4)) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3*((100% - 3*6rem)/4) + 2*6rem); }
